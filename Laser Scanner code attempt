#!/usr/bin/env python
# Software License Agreement (BSD License)
#
# Copyright (c) 2008, Willow Garage, Inc.
# All rights reserved.
#
# Redistribution and use in source and binary forms, with or without


# THIS CODE HAS BEEN COPIED FROM THECONSTRUCTSIM.COM/EXPLORING-ROS-2-WHEELED-ROBOT-PART-5/
# THIS CODE HAS BEEN COPIED WITH THE AIM TO TRY AND GET THE LASER SCANNER TO WORKK

import rospy

from geometry_msgs.msg import Twist
from sensor_msgs.msg import LaserScan

pub = None #rospy.Publisher('/base_scan', LaserScan, queue_size=1)


def main():
   
global pub

rospy.init_node('reading_laser')

pub = rospy.Publisher('/cmd_vel', Twist, queue_size=1)

sub = rospy.Subscriber('/scan', LaserScan, scan_callback)

rospy.spin()

#if __name__ == '__main__':
#       main(sub)

def scan_callback(msg):
regions = {
'right':  min(min(msg.ranges[0:143]), 10),
'fright': min(min(msg.ranges[144:287]), 10),
'front':  min(min(msg.ranges[288:431]), 10),
'fleft':  min(min(msg.ranges[432:575]), 10),
'left':   min(min(msg.ranges[576:713]), 10),
}

take_actions(regions)

def take_actions(regions):
msg = Twist()
linear_x = 0
angular_z = 0

state_descritpion = ''

if regions ['front'] > 1 and regions ['fleft'] > 1 and regions ['fright'] > 1:
state_description = 'case 1 - nothing'
linear_x = 0.6
angular_z = 0
elif regions ['front'] < 1 and regions['fleft'] > 1 and regions['fright'] > 1:
state_description = 'case 2 - front'
linear_x = 0
angular_z = -0.3
elif regions ['front'] > 1 and regions['fleft'] > 1 and regions['fright'] < 1:
state_description = 'case 3 - fright'
linear_x = 0
angular_z = -0.3
elif regions ['front'] > 1 and regions['fleft'] < 1 and regions['fright'] > 1:
state_description = 'case 4 - fleft'
linear_x = 0
angular_z = 0.3
elif regions ['front'] < 1 and regions['fleft'] > 1 and regions['fright'] < 1:
state_description = 'case 5 - front and fright'
linear_x = 0
angular_z = -0.3
elif regions ['front'] < 1 and regions['fleft'] < 1 and regions['fright'] > 1:
state_description = 'case 6 - front and fleft'
linear_x = 0
angular_z = 0.3
elif regions ['front'] < 1 and regions['fleft'] < 1 and regions['fright'] < 1:
state_description = 'case 7 - front and fleft and fright'
linear_x = 0
angular_z = -0.3
elif regions ['front'] > 1 and regions['fleft'] < 1 and regions['fright'] < 1:
state_description = 'case 8 - fleft and fright'
linear_x = 0
angular_z = -0.3
else:
state_description = 'unknown case'
rospy.loginfo(regions)

rospy.loginfo(state_description)
msg.linear.x = linear_x
msg.angular.z = angular_z
pub.publish(msg)
